from datetime import datetime

from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from account.models import BotUser
from core.models import Exchange, Currency, Wallet, CurrencyMinBuy


def get_feedback(lang):
    exchanges = Exchange.objects.count()
    clients = BotUser.objects.count()
    if lang == 'uz':
        return f"""üë®‚Äçüíª @Uzchangenetbot - –°–∞–º–∞—è –Ω–∞–¥–µ–∂–Ω–∞—è –∏ —É–¥–æ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±–º–µ–Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ!!!

‚Åâ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ - –ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏. 

üíπ @uzchange_pay

–¶–µ–Ω—Ç—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏: üë®‚Äçüíª @ikromjon_xusanov

üí∏–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {exchanges}
üë•–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {clients}

üë®‚Äçüíª–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @ikromjon_xusanov
        """
    else:
        return f"""üë®‚Äçüíª @Uzchangenetbot - –°–∞–º–∞—è –Ω–∞–¥–µ–∂–Ω–∞—è –∏ —É–¥–æ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±–º–µ–Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ!!!

        ‚Åâ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ - –ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏. 

        üíπ @uzchange_pay

        –¶–µ–Ω—Ç—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏: üë®‚Äçüíª @ikromjon_xusanov

        üí∏–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {exchanges}
        üë•–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {clients}

        üë®‚Äçüíª–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @ikromjon_xusanov
        """


class Message:
    def __init__(self, lang):
        self.lang = lang
        if lang == "uz":
            self.HOME = "ü§ìValyuta ayirboshlash xizmatiga xush kelibsiz. Siz bilan ko‚Äòrishib turganimizdan xursandmiz." \
                        "\n\n‚òùÔ∏èEslatma: Siz bizning botimiz orqali o‚Äòz pullaringizni boshqa " \
                        "valyutalar bilan tezkor ayirboshlashingiz  mumkin!"
            self.settings = "‚öôÔ∏è Sozlamalar"
            self.set_full_name = "To'liq ismingizni kiriting"
            self.exchange = "Valyutalarni tanlang: (üî∑Berish) va (üî∂Olish)"
            self.reserve = "üí∞<b>Bot Zahirasi</b>"
            self.wallet = "üóÇ Sizning hamyonlaringiz:"
        else:
            self.HOME = "ü§ì–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—É–Ω–∫—Ç –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç—ã. –ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è." \
                        "\n \n‚òùÔ∏è–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞" \
                        "–í—ã –º–æ–∂–µ—Ç–µ –±—ã—Å—Ç—Ä–æ –æ–±–º–µ–Ω—è—Ç—å –≤–∞–ª—é—Ç—É!"
            self.settings = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
            self.set_full_name = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
            self.exchange = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞: (üî∑–æ—Ç–¥–∞—á–∞) –∏ (üî∂–ø–æ–ª—É—á–µ–Ω–∏—è)"
            self.reserve = "üí∞<b>–†–µ–∑–µ—Ä–≤ –û–±–º–µ–Ω–Ω–∏–∫–∞</b>"
            self.wallet = "üóÇ –í–∞—à–∏ –ö–æ—à–µ–ª—å–∫–∏:"

        self.feedback = get_feedback(lang)

    @property
    def get_data_excel_error(self):
        if self.lang == 'uz':
            return "ü§ñ Ma'lumotni olishda xatolik yuz berdi ‚ùå"
        else:
            return "ü§ñ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö ‚ùå"

    @property
    def data_excel(self):
        return "‚úè Botda to'plangan ma'lumotlar" if self.lang == 'uz' else "‚úè –î–∞–Ω–Ω—ã–µ, —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–µ"


def wallet_add_or_change(create: bool, lang: str) -> str:
    if lang == 'uz':
        if create:
            return "‚ûï Qo'shish"
        else:
            return "‚úè O'zgartirish"
    else:
        if create:
            return "‚ûï –î–æ–±–∞–≤–ª—è—Ç—å"
        else:
            return "‚úè –ò–∑–º–µ–Ω–∏—Ç—å"


class ButtonText:
    def __init__(self, lang):
        self.lang = lang
        if lang == "uz":
            self.currency_exchange = "‚ôªÔ∏è Valyuta ayirboshlash"
            self.wallet = "üî∞ Hamyonlar"
            self.course_reserve = "üìà Kurs / üí∞ Zahira"
            self.exchanges = "üßæ Almashuvlar"
            self.feedback = "üìû Qayta aloqa"
            self.settings = "‚öôÔ∏è Sozlamalar"
            self.set_lang = "üìù Tilni o'zgartirish"
            self.set_full_name = "‚úè F.I.SH o'zgartirish"
            self.cancel = "‚ùå Bekor qilish"
            self.back = "üîô Orqaga"
            self.back_home = "üì§ Bosh menyu"
            self.reserve = "üí∞ Zahirani ko'rsatish"
            self.course = "üìà Kursni ko'rsatish"
            self.delete = "‚ùå Ma'lumotlarni o'chirish"
            self.delete_wallet = "‚ùå O'chirish"
            self.yes = "‚úÖ Ha"
            self.no = "‚ùå Yo'q"
            self.data = "üìî Ma'lumotlarni yuklab olish"
            self.give = "‚¨ÜÔ∏èBerishni kiritish "
            self.get = "‚¨áÔ∏èOlish kiritish "
        else:
            self.currency_exchange = "‚ôªÔ∏è –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã"
            self.wallet = "üî∞ –ö–æ—à–µ–ª—å–∫–∏"
            self.course_reserve = "üìà –ö—É—Ä—Å / üí∞ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"
            self.exchanges = "üßæ –û–±–º–µ–Ω—ã"
            self.feedback = "üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
            self.settings = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
            self.set_lang = "üìù –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
            self.set_full_name = "‚úè –ò–∑–º–µ–Ω–µ–Ω–∏–µ –§.–ò.–û."
            self.cancel = "‚ùå –û—Ç–º–µ–Ω–∞"
            self.back = "üîô –ù–∞–∑–∞–¥"
            self.back_home = "üì§ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            self.reserve = "üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –†–µ–∑–µ—Ä–≤—ã"
            self.course = "üìà –ü–æ–∫–∞–∑–∞—Ç—å –ö—É—Ä—Å"
            self.delete = "‚ùå –£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
            self.delete_wallet = "‚ùå –£–¥–∞–ª–∏—Ç—å"
            self.yes = "‚úÖ –î–∞"
            self.no = "‚ùå –ù–µ—Ç"
            self.data = "üìî –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"
            self.give = "‚¨Ü –û—Ç–¥–∞—Ç—å "
            self.get = "‚¨á –ü–æ–ª—É—á–∏—Ç—å "

    @property
    def get_users_for_excel_button(self) -> str:
        return "üìà Foydalanuvchilarni ma'lumotlari" if self.lang == 'uz' else "üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"

    @property
    def get_changes_for_excel_button(self) -> str:
        return "üìà Foydalanuvchilarni ma'lumotlari" if self.lang == 'uz' else "üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"

    @property
    def exchange_create(self):
        return "üí∏ To'lovga o'tish" if self.lang == 'uz' else "üí∏ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ"

    @property
    def exchange_save(self):
        return "‚úÖ O'tkazdim" if self.lang == 'uz' else "‚úÖ –ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è"


def exchange_create_message(lang: str, owner_card_number: str, e: dict) -> str:
    if lang == 'uz':
        return f"<pre>{owner_card_number}</pre>\nüëÜ\n" \
               f"Almashuvingiz muvaffaqiyatli bajarilishi uchun quyidagi harakatlarni amalga oshiring:" \
               f"Pastroqda ko‚Äòrsatilgan miqdorni <pre>{owner_card_number}</pre>" \
               "hamyon raqamiga o‚Äòtkazing; <b>¬´O‚Äòtkazdim¬ª</b> tugmasini bosing; \nMiqdor: " \
               f"<b>{e['give']}</b> {e['give_code']}" \
               "Ushbu tekshiruv operator tomonidan amalga oshiriladi va o‚Äòrtacha 5 daqiqadan 60 daqiqagacha davom etadi"
    else:
        return f"<pre>{owner_card_number}</pre>\nüëÜ\n" \
               f"–î–ª—è —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:" \
               f"–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—É—é –Ω–∏–∂–µ —Å—É–º–º—É –Ω–∞ –∫–æ—à–µ–ª–µ–∫ <pre>{owner_card_number}</pre>" \
               "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è¬ª; \nMiqdor: " \
               f"<b>{e['give']}</b> {e['give_code']}" \
               "–î–∞–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ –∏ –∑–∞–Ω–∏–º–∞–µ—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º" \
               " –æ—Ç –æ—Ç 5 –º–∏–Ω—É—Ç—ã –¥–æ 60 –º–∏–Ω—É—Ç –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"


class ContextData:
    HOME = "home"
    SETTINGS = "settings"
    FEEDBACK = 'feedback'
    EXCHANGE = 'exchange'
    RESERVE = 'reserve'
    WALLET = "wallet"


ContextData = ContextData()


def get_keyboard(lang, admin: bool = False):
    buttons = [
        [
            InlineKeyboardButton(ButtonText(lang).currency_exchange, callback_data=ContextData.EXCHANGE),
            InlineKeyboardButton(ButtonText(lang).wallet, callback_data=ContextData.WALLET),
        ],
        [
            InlineKeyboardButton(ButtonText(lang).exchanges, callback_data='none'),
            InlineKeyboardButton(ButtonText(lang).course_reserve, callback_data='course_reserve')
        ],
        [
            InlineKeyboardButton(ButtonText(lang).settings, callback_data=ContextData.SETTINGS),
            InlineKeyboardButton(ButtonText(lang).feedback, callback_data=ContextData.FEEDBACK)
        ],
    ]
    if admin:
        buttons.append([InlineKeyboardButton(ButtonText(lang).data, callback_data='data')])
    return InlineKeyboardMarkup(buttons)


def get_bot_user(tg_id=None):
    return BotUser.objects.get_or_create(tg_id=tg_id)[0]


def get_text_wallet(user: BotUser):
    currencies = list(Currency.objects.all().values('id', 'name'))
    txt = "\n"
    for c in currencies:
        card = Wallet.objects.filter(user=user, currency_id=c['id']).first()
        resp = card.number if card else "Bo'sh" if user.lang == 'uz' else "–ü—É—Å—Ç–æ–π"
        txt += f"\nüí≥ <b>{c['name']}</b>: <i>{resp}</i>"
    return txt


def get_exchange_text(lang: str, from_card: Currency, to_card: Currency) -> str:
    if lang == 'uz':
        return "‚¨ÜÔ∏è<b>Berish</b>: <i>{}</i>\n‚¨áÔ∏è<b>Olish</b>: <i>{}</i>\nüïó<b>Sana</b>: {:%d.%m.%Y}".format(
            from_card.name,
            to_card.name,
            datetime.now()
        )
    else:
        return "‚¨ÜÔ∏è<b>–û—Ç–¥–∞–µ—Ç–µ</b>: <i>{}</i>\n‚¨áÔ∏è<b>–ü–æ–ª—É—á–∞–µ—Ç–µ</b>: <i>{}</i>\nüïó<b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</b>: {:%d.%m.%Y}".format(
            from_card.name,
            to_card.name,
            datetime.now()
        )


# ‚¨ÜÔ∏è–û—Ç–¥–∞—Ç—å
# ‚¨áÔ∏è–ü–æ–ª—É—á–∏—Ç—å
def exchange_from_card_msg(from_card, minbuy: CurrencyMinBuy, code: str, lang: str) -> str:
    if lang == 'uz':
        return f"‚¨Ü Ô∏èBerish miqdorini <b>{from_card.name}</b>da kiriting:\n\n" \
               f"Minimal:  <i>{minbuy.min_buy_f}</i> {code}\n" \
               "Bekor qilish uchun /start deb yozing."
    else:
        return f"‚¨ÜÔ∏è–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ—Ç–¥–∞—á–∏ –≤ <b> {from_card.name} </b>: \n\n" \
               f"–ú–∏–Ω–∏–º—É–º: <i> {minbuy.min_buy_f} </i> {code}\n" \
               "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ /start"


def exchange_to_card_msg(to_card: Currency, minbuy: CurrencyMinBuy, code: str, lang: str) -> str:
    if lang == 'uz':
        return f"‚¨á Olish miqdorini <b>{to_card.name}</b>da kiriting:\n\n" \
               f"Minimal:  <i>{minbuy.min_buy_t}</i> {code}\n" \
               "Bekor qilish uchun /start deb yozing."
    else:
        return f"‚¨á –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ª—É—á–µ–Ω–∏—è –≤ <b> {to_card.name} </b>: \n\n" \
               f"–ú–∏–Ω–∏–º—É–º: <i> {minbuy.min_buy_t} </i> {code}\n" \
               "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ /start"


def enter_card_number_msg(card: Currency, lang: str) -> str:
    if lang == "uz":
        return "<i>Siz to‚Äòlov qilmoqchi bo‚Äòlgan</i>" \
               f"\n\n<b>{card.name}</b> raqamni kiriting:" \
               f"\nMisol uchun: (<i>{card.example}</i>)"
    else:
        return f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä <b>{card.name}</b> —Å—á—ë—Ç–∞:" \
               "\n–° –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –æ–ø–ª–∞—Ç—É." \
               f"\n–ù–∞–ø—Ä–∏–º–µ—Ä: (<i>{card.example}</i>)"


def enter_repeat_card_number_msg(card: Currency, lang: str) -> str:
    if lang == "uz":
        return f"{card.name} hamyon formati noto'g'ri"
    else:
        return f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç {card.name} –∫–æ—à–µ–ª—å–∫–∞"


def enter_min_summa_msg(minbuy_value: float, code: str, lang: str) -> str:
    if lang == "uz":
        return f"Minimal:  <i>{minbuy_value}</i> {code}\n" \
               "Bekor qilish uchun /start deb yozing."
    else:
        return f"–ú–∏–Ω–∏–º—É–º: <i> {minbuy_value} </i> {code}\n" \
               "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ /start"


def get_card_code(card: Currency, lang: str) -> str:
    code = card.code
    if card.code == 'UZS':
        code = 'So`m'
        if lang == 'ru':
            code = "–°–£–ú"
    return code


def get_exchange_doc_msg(exchange: Exchange, lang: str, from_card, to_card) -> str:
    date = "{:%d.%m.%Y %H:%M}".format(datetime.now())
    if lang == "uz":
        return (f"üÜî Almashuv: {exchange.id}"
                f"\nüîÄ:{from_card} ‚û°Ô∏è {to_card}"
                f"\n{from_card.flag}{from_card}: {exchange.from_card}"
                f"\nüí∏: {exchange.give} {exchange.give_code}"
                f"\n{to_card.flag}{to_card}: {exchange.to_card}"
                f"\nüí∞: {exchange.get} {exchange.get_code}"
                f"\nüìåTo‚Äòlov: Tekshiruvda."
                f"\nüìÜO‚Äòtkazma sanasi: {date}"
                )
    else:
        return (f"üÜî –ó–∞—è–≤–∫–∞: {exchange.id}"
                f"\nüîÄ:{from_card} ‚û°Ô∏è {to_card}"
                f"\n{from_card}: {exchange.from_card}"
                f"\nüí∏: {exchange.give} {exchange.give_code}"
                f"\n{to_card}: {exchange.to_card}"
                f"\n: {exchange.get} {exchange.get_code}"
                f"\nüìå –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: –í –æ–±—Ä–∞–±–æ—Ç–∫–µ."
                f"\nüìÜ–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: {date}"
                )
